[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"


[project]
name = "django-tenant-users"
description = "A Django app to extend django-tenants to incorporate global multi-tenant users"
version = "2.2.1"
readme = "README.rst"
license = { text = "MIT" }
requires-python = ">=3.9"
authors = [
  { name = "Corvia Technologies, LLC", email = "support@corvia.tech" },
]
keywords = [
  "django",
  "django-tenant-users",
  "multi-tenant",
  "saas",
  "tenant",
  "users",
]
classifiers = [
  # Development Status
  "Development Status :: 5 - Production/Stable",
  
  # Environment
  "Environment :: Web Environment",
  
  # Framework
  "Framework :: Django",
  "Framework :: Django :: 4.2",
  "Framework :: Django :: 5.1", 
  "Framework :: Django :: 5.2",
  
  # Audience & License
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  
  # OS & Language
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  
  # Topics
  "Topic :: Internet :: WWW/HTTP",
  "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Topic :: Internet :: WWW/HTTP :: Dynamic Content :: Content Management System",
]
dependencies = [
  "django>=4.2",
  "django-tenants>=3.6,<4.0",
]

[project.urls]
Homepage = "https://github.com/Corvia/django-tenant-users"
Repository = "https://github.com/Corvia/django-tenant-users"
Documentation = "https://django-tenant-users.readthedocs.io/"
Changelog = "https://github.com/Corvia/django-tenant-users/blob/main/CHANGELOG.md"
"Bug Tracker" = "https://github.com/Corvia/django-tenant-users/issues"

[tool.poetry]
packages = [
  { include = 'tenant_users' },
]

[tool.poetry.dependencies]
python = "^3.9"

[tool.poetry.group.test.dependencies]
# Type Checking
django-stubs = { version = "4.2.7", extras = ["compatible-mypy"] }

# Code Quality
nitpick = ">=0.32,<0.37"
safety = ">=2.2,<4.0"
ruff = ">=0.5.0,<0.14.0"
rstfmt = "0.0.14"

# Testing Utilities
pytest = ">=7.2.2,<9.0.0"
pytest-cov = ">=4,<8"
pytest-randomly = ">=3.12,<5.0"
pytest-django = "^4.5.2"
pytest-deadfixtures = "^2.2.1"
pytest-testmon = ">=1.3.3,<3.0.0"
pytest-timeout = "^2.1.0"
hypothesis = { version = "^6.140.3", extras = ["django", "pytest", "pytz"] }

# Documentation and Formatting
doc8 = ">=0.11,<1.2"

# Configuration and Database
tomlkit = ">=0.13.0,<0.14"
python-decouple = "^3.6"
psycopg2-binary = "^2.9.6"


[tool.poetry.group.docs]
optional = true


[tool.poetry.group.docs.dependencies]
sphinx = ">=5.0,<8.0"
sphinx-rtd-theme = ">=1.3,<4.0"
sphinx-autodoc-typehints = ">=1.19.5,<3.0.0"
m2r2 = "^0.3"
psycopg2-binary = "^2.9.6"
tomli = "^2.0.1"


[tool.doc8]
max-line-length = 88


[tool.ruff]
# Ruff config: https://docs.astral.sh/ruff/settings
line-length = 88
target-version = "py39"
preview = false

[tool.ruff.format]
quote-style = "double"
docstring-code-format = true
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.lint]
select = [ "ALL" ]

# Project-wide relaxations (formatter & pragmatism)
ignore = [
  "ANN",            # mypy handles types
  "D1",             # Docstrings related
  "E501",           # line length; formatter governs wrapping
  "COM812",         # trailing comma; formatter decides
  "TRY003",         # long exception messages; not worth churn
  "EM101", "EM102", # exception message style; noise
  "PTH",            # pathlib nags
]

[tool.ruff.lint.flake8-self]
ignore-names = ["_meta"]

[tool.ruff.lint.isort]
known-first-party = ["tenant_users"]
known-third-party = ["django", "django_tenants"]

[tool.ruff.lint.pep8-naming]
ignore-names = [
  "tenant_cached_property",
  "UserModel",
  "TenantModel",
]

[tool.ruff.lint.per-file-ignores]
# Django scripts / entry points often import inside main()
"manage.py" = ["PLC0415"]

# Generated-ish: keep super lax.
"**/migrations/*" = ["RUF012", "UP", "B", "S", "I", "C90", "PERF"]

# Tests: allow asserts, magic numbers, relaxed docs/types.
"tests/**" = ["S101", "S106", "PLR2004", "D", "PYI", "UP", "N806", "ARG"]

# Re-exports: allow unused imports in package inits.
"**/__init__.py" = ["F401"]

# Sphinx build script sometimes looks “script-y”.
"docs/conf.py" = ["INP001"]

[tool.ruff.lint.pydocstyle]
# Use Google-style docstrings.
convention = "google"
